// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1SwitchNotifyRequest v1 switch notify request
// swagger:model v1.SwitchNotifyRequest
type V1SwitchNotifyRequest struct {

	// error
	// Required: true
	Error *string `json:"error"`

	// the duration of the switch synchronization
	// Required: true
	SyncDuration *int64 `json:"sync_duration"`
}

// Validate validates this v1 switch notify request
func (m *V1SwitchNotifyRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateError(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSyncDuration(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1SwitchNotifyRequest) validateError(formats strfmt.Registry) error {

	if err := validate.Required("error", "body", m.Error); err != nil {
		return err
	}

	return nil
}

func (m *V1SwitchNotifyRequest) validateSyncDuration(formats strfmt.Registry) error {

	if err := validate.Required("sync_duration", "body", m.SyncDuration); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1SwitchNotifyRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1SwitchNotifyRequest) UnmarshalBinary(b []byte) error {
	var res V1SwitchNotifyRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
