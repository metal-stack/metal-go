// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1ServerCapacity v1 server capacity
//
// swagger:model v1.ServerCapacity
type V1ServerCapacity struct {

	// free machines with this size, size reservations are not considered
	Allocatable int32 `json:"allocatable,omitempty" yaml:"allocatable,omitempty"`

	// allocated machines
	Allocated int32 `json:"allocated,omitempty" yaml:"allocated,omitempty"`

	// machines with issues with this size
	Faulty int32 `json:"faulty,omitempty" yaml:"faulty,omitempty"`

	// machine ids with issues with this size
	Faultymachines []string `json:"faultymachines" yaml:"faultymachines"`

	// free machines with this size (freely allocatable)
	Free int32 `json:"free,omitempty" yaml:"free,omitempty"`

	// machines neither phoned home nor waiting but in another provisioning state
	Other int32 `json:"other,omitempty" yaml:"other,omitempty"`

	// machine ids neither allocated nor waiting with this size
	Othermachines []string `json:"othermachines" yaml:"othermachines"`

	// machines in phoned home provisioning state
	PhonedHome int32 `json:"phoned_home,omitempty" yaml:"phoned_home,omitempty"`

	// the amount of unused / remaining / open reservations for this size
	Remainingreservations int32 `json:"remainingreservations,omitempty" yaml:"remainingreservations,omitempty"`

	// the amount of reservations for this size
	Reservations int32 `json:"reservations,omitempty" yaml:"reservations,omitempty"`

	// the size of the machine
	// Required: true
	Size *string `json:"size" yaml:"size"`

	// total amount of machines with size
	Total int32 `json:"total,omitempty" yaml:"total,omitempty"`

	// unavailable machines with this size
	Unavailable int32 `json:"unavailable,omitempty" yaml:"unavailable,omitempty"`

	// the amount of used reservations for this size
	Usedreservations int32 `json:"usedreservations,omitempty" yaml:"usedreservations,omitempty"`

	// machines in waiting provisioning state
	Waiting int32 `json:"waiting,omitempty" yaml:"waiting,omitempty"`
}

// Validate validates this v1 server capacity
func (m *V1ServerCapacity) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSize(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1ServerCapacity) validateSize(formats strfmt.Registry) error {

	if err := validate.Required("size", "body", m.Size); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this v1 server capacity based on context it is used
func (m *V1ServerCapacity) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1ServerCapacity) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1ServerCapacity) UnmarshalBinary(b []byte) error {
	var res V1ServerCapacity
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
