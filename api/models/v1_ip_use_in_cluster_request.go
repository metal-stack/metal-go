// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1IPUseInClusterRequest v1 IP use in cluster request
// swagger:model v1.IPUseInClusterRequest
type V1IPUseInClusterRequest struct {

	// clusterid
	// Required: true
	Clusterid *string `json:"clusterid"`

	// the address (ipv4 or ipv6) of this ip
	// Required: true
	// Unique: true
	Ipaddress *string `json:"ipaddress"`

	// tags
	Tags []string `json:"tags"`
}

// Validate validates this v1 IP use in cluster request
func (m *V1IPUseInClusterRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateClusterid(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIpaddress(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1IPUseInClusterRequest) validateClusterid(formats strfmt.Registry) error {

	if err := validate.Required("clusterid", "body", m.Clusterid); err != nil {
		return err
	}

	return nil
}

func (m *V1IPUseInClusterRequest) validateIpaddress(formats strfmt.Registry) error {

	if err := validate.Required("ipaddress", "body", m.Ipaddress); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1IPUseInClusterRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1IPUseInClusterRequest) UnmarshalBinary(b []byte) error {
	var res V1IPUseInClusterRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
