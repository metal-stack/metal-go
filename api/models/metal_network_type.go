// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MetalNetworkType metal network type
// swagger:model metal.NetworkType
type MetalNetworkType struct {

	// name
	// Required: true
	Name *string `json:"Name"`

	// private
	// Required: true
	Private *bool `json:"Private"`

	// private primary
	// Required: true
	PrivatePrimary *bool `json:"PrivatePrimary"`

	// shared
	// Required: true
	Shared *bool `json:"Shared"`

	// underlay
	// Required: true
	Underlay *bool `json:"Underlay"`
}

// Validate validates this metal network type
func (m *MetalNetworkType) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePrivate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePrivatePrimary(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateShared(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUnderlay(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MetalNetworkType) validateName(formats strfmt.Registry) error {

	if err := validate.Required("Name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

func (m *MetalNetworkType) validatePrivate(formats strfmt.Registry) error {

	if err := validate.Required("Private", "body", m.Private); err != nil {
		return err
	}

	return nil
}

func (m *MetalNetworkType) validatePrivatePrimary(formats strfmt.Registry) error {

	if err := validate.Required("PrivatePrimary", "body", m.PrivatePrimary); err != nil {
		return err
	}

	return nil
}

func (m *MetalNetworkType) validateShared(formats strfmt.Registry) error {

	if err := validate.Required("Shared", "body", m.Shared); err != nil {
		return err
	}

	return nil
}

func (m *MetalNetworkType) validateUnderlay(formats strfmt.Registry) error {

	if err := validate.Required("Underlay", "body", m.Underlay); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *MetalNetworkType) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MetalNetworkType) UnmarshalBinary(b []byte) error {
	var res MetalNetworkType
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
