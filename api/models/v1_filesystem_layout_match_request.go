// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1FilesystemLayoutMatchRequest v1 filesystem layout match request
//
// swagger:model v1.FilesystemLayoutMatchRequest
type V1FilesystemLayoutMatchRequest struct {

	// filesystemlayout id to check
	// Required: true
	Filesystemlayout *string `json:"filesystemlayout" yaml:"filesystemlayout"`

	// machine id to check
	// Required: true
	Machine *string `json:"machine" yaml:"machine"`
}

// Validate validates this v1 filesystem layout match request
func (m *V1FilesystemLayoutMatchRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFilesystemlayout(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMachine(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1FilesystemLayoutMatchRequest) validateFilesystemlayout(formats strfmt.Registry) error {

	if err := validate.Required("filesystemlayout", "body", m.Filesystemlayout); err != nil {
		return err
	}

	return nil
}

func (m *V1FilesystemLayoutMatchRequest) validateMachine(formats strfmt.Registry) error {

	if err := validate.Required("machine", "body", m.Machine); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this v1 filesystem layout match request based on context it is used
func (m *V1FilesystemLayoutMatchRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1FilesystemLayoutMatchRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1FilesystemLayoutMatchRequest) UnmarshalBinary(b []byte) error {
	var res V1FilesystemLayoutMatchRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
