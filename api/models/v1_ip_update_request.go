// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1IPUpdateRequest v1 IP update request
// swagger:model v1.IPUpdateRequest
type V1IPUpdateRequest struct {

	// a description for this entity
	Description string `json:"description,omitempty"`

	// the address (ipv4 or ipv6) of this ip
	// Required: true
	// Unique: true
	Ipaddress *string `json:"ipaddress"`

	// the ip type, ephemeral leads to automatic cleanup of the ip address, static will enable re-use of the ip at a later point in time
	// Required: true
	// Enum: [static ephemeral]
	Iptype *string `json:"iptype"`

	// a readable name for this entity
	Name string `json:"name,omitempty"`

	// free tags that you associate with this ip.
	// Required: true
	Tags []string `json:"tags"`
}

// Validate validates this v1 IP update request
func (m *V1IPUpdateRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIpaddress(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIptype(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTags(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1IPUpdateRequest) validateIpaddress(formats strfmt.Registry) error {

	if err := validate.Required("ipaddress", "body", m.Ipaddress); err != nil {
		return err
	}

	return nil
}

var v1IpUpdateRequestTypeIptypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["static","ephemeral"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v1IpUpdateRequestTypeIptypePropEnum = append(v1IpUpdateRequestTypeIptypePropEnum, v)
	}
}

const (

	// V1IPUpdateRequestIptypeStatic captures enum value "static"
	V1IPUpdateRequestIptypeStatic string = "static"

	// V1IPUpdateRequestIptypeEphemeral captures enum value "ephemeral"
	V1IPUpdateRequestIptypeEphemeral string = "ephemeral"
)

// prop value enum
func (m *V1IPUpdateRequest) validateIptypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, v1IpUpdateRequestTypeIptypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *V1IPUpdateRequest) validateIptype(formats strfmt.Registry) error {

	if err := validate.Required("iptype", "body", m.Iptype); err != nil {
		return err
	}

	// value enum
	if err := m.validateIptypeEnum("iptype", "body", *m.Iptype); err != nil {
		return err
	}

	return nil
}

func (m *V1IPUpdateRequest) validateTags(formats strfmt.Registry) error {

	if err := validate.Required("tags", "body", m.Tags); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1IPUpdateRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1IPUpdateRequest) UnmarshalBinary(b []byte) error {
	var res V1IPUpdateRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
