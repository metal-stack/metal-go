// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1PartitionBase v1 partition base
//
// swagger:model v1.PartitionBase
type V1PartitionBase struct {

	// the address to the management service of this partition
	Mgmtserviceaddress string `json:"mgmtserviceaddress,omitempty" yaml:"mgmtserviceaddress,omitempty"`

	// the length of private networks for the machine's child networks in this partition, default 22
	// Maximum: 30
	// Minimum: 16
	Privatenetworkprefixlength int32 `json:"privatenetworkprefixlength,omitempty" yaml:"privatenetworkprefixlength,omitempty"`

	// the maximum waiting pool size of this partition
	Waitingpoolmaxsize string `json:"waitingpoolmaxsize,omitempty" yaml:"waitingpoolmaxsize,omitempty"`

	// the minimum waiting pool size of this partition
	Waitingpoolminsize string `json:"waitingpoolminsize,omitempty" yaml:"waitingpoolminsize,omitempty"`
}

// Validate validates this v1 partition base
func (m *V1PartitionBase) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePrivatenetworkprefixlength(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1PartitionBase) validatePrivatenetworkprefixlength(formats strfmt.Registry) error {
	if swag.IsZero(m.Privatenetworkprefixlength) { // not required
		return nil
	}

	if err := validate.MinimumInt("privatenetworkprefixlength", "body", int64(m.Privatenetworkprefixlength), 16, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("privatenetworkprefixlength", "body", int64(m.Privatenetworkprefixlength), 30, false); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this v1 partition base based on context it is used
func (m *V1PartitionBase) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1PartitionBase) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1PartitionBase) UnmarshalBinary(b []byte) error {
	var res V1PartitionBase
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
