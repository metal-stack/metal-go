// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1TenantGetHistoryRequest v1 tenant get history request
//
// swagger:model v1.TenantGetHistoryRequest
type V1TenantGetHistoryRequest struct {

	// at
	// Format: date-time
	At strfmt.DateTime `json:"at,omitempty" yaml:"at,omitempty"`
}

// Validate validates this v1 tenant get history request
func (m *V1TenantGetHistoryRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1TenantGetHistoryRequest) validateAt(formats strfmt.Registry) error {
	if swag.IsZero(m.At) { // not required
		return nil
	}

	if err := validate.FormatOf("at", "body", "date-time", m.At.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this v1 tenant get history request based on context it is used
func (m *V1TenantGetHistoryRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1TenantGetHistoryRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1TenantGetHistoryRequest) UnmarshalBinary(b []byte) error {
	var res V1TenantGetHistoryRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
