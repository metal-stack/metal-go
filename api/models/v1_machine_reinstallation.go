// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1MachineReinstallation v1 machine reinstallation
// swagger:model v1.MachineReinstallation
type V1MachineReinstallation struct {

	// device name of disk partition that has the OS installed
	// Required: true
	OsPartition *string `json:"os_partition"`

	// device name of the disk that contains the partition on which the OS is installed
	// Required: true
	PrimaryDisk *string `json:"primary_disk"`
}

// Validate validates this v1 machine reinstallation
func (m *V1MachineReinstallation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOsPartition(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePrimaryDisk(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1MachineReinstallation) validateOsPartition(formats strfmt.Registry) error {

	if err := validate.Required("os_partition", "body", m.OsPartition); err != nil {
		return err
	}

	return nil
}

func (m *V1MachineReinstallation) validatePrimaryDisk(formats strfmt.Registry) error {

	if err := validate.Required("primary_disk", "body", m.PrimaryDisk); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1MachineReinstallation) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1MachineReinstallation) UnmarshalBinary(b []byte) error {
	var res V1MachineReinstallation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
