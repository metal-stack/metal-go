// Code generated by go-swagger; DO NOT EDIT.

package ip

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/metal-pod/metal-go/api/models"
)

// TagIPReader is a Reader for the TagIP structure.
type TagIPReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TagIPReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewTagIPOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewTagIPDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewTagIPOK creates a TagIPOK with default headers values
func NewTagIPOK() *TagIPOK {
	return &TagIPOK{}
}

/*TagIPOK handles this case with default header values.

OK
*/
type TagIPOK struct {
	Payload *models.V1IPResponse
}

func (o *TagIPOK) Error() string {
	return fmt.Sprintf("[POST /v1/ip/tag][%d] tagIpOK  %+v", 200, o.Payload)
}

func (o *TagIPOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1IPResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTagIPDefault creates a TagIPDefault with default headers values
func NewTagIPDefault(code int) *TagIPDefault {
	return &TagIPDefault{
		_statusCode: code,
	}
}

/*TagIPDefault handles this case with default header values.

Error
*/
type TagIPDefault struct {
	_statusCode int

	Payload *models.HttperrorsHTTPErrorResponse
}

// Code gets the status code for the tag IP default response
func (o *TagIPDefault) Code() int {
	return o._statusCode
}

func (o *TagIPDefault) Error() string {
	return fmt.Sprintf("[POST /v1/ip/tag][%d] tagIP default  %+v", o._statusCode, o.Payload)
}

func (o *TagIPDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HttperrorsHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
