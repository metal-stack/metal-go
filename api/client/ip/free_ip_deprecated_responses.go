// Code generated by go-swagger; DO NOT EDIT.

package ip

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/metal-stack/metal-go/api/models"
	"github.com/metal-stack/metal-lib/httperrors"
)

// FreeIPDeprecatedReader is a Reader for the FreeIPDeprecated structure.
type FreeIPDeprecatedReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FreeIPDeprecatedReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFreeIPDeprecatedOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewFreeIPDeprecatedDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewFreeIPDeprecatedOK creates a FreeIPDeprecatedOK with default headers values
func NewFreeIPDeprecatedOK() *FreeIPDeprecatedOK {
	return &FreeIPDeprecatedOK{}
}

/*
FreeIPDeprecatedOK describes a response with status code 200, with default header values.

OK
*/
type FreeIPDeprecatedOK struct {
	Payload *models.V1IPResponse
}

// IsSuccess returns true when this free Ip deprecated o k response has a 2xx status code
func (o *FreeIPDeprecatedOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this free Ip deprecated o k response has a 3xx status code
func (o *FreeIPDeprecatedOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this free Ip deprecated o k response has a 4xx status code
func (o *FreeIPDeprecatedOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this free Ip deprecated o k response has a 5xx status code
func (o *FreeIPDeprecatedOK) IsServerError() bool {
	return false
}

// IsCode returns true when this free Ip deprecated o k response a status code equal to that given
func (o *FreeIPDeprecatedOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the free Ip deprecated o k response
func (o *FreeIPDeprecatedOK) Code() int {
	return 200
}

func (o *FreeIPDeprecatedOK) Error() string {
	return fmt.Sprintf("[POST /v1/ip/free/{id}][%d] freeIpDeprecatedOK  %+v", 200, o.Payload)
}

func (o *FreeIPDeprecatedOK) String() string {
	return fmt.Sprintf("[POST /v1/ip/free/{id}][%d] freeIpDeprecatedOK  %+v", 200, o.Payload)
}

func (o *FreeIPDeprecatedOK) GetPayload() *models.V1IPResponse {
	return o.Payload
}

func (o *FreeIPDeprecatedOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1IPResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFreeIPDeprecatedDefault creates a FreeIPDeprecatedDefault with default headers values
func NewFreeIPDeprecatedDefault(code int) *FreeIPDeprecatedDefault {
	return &FreeIPDeprecatedDefault{
		_statusCode: code,
	}
}

/*
FreeIPDeprecatedDefault describes a response with status code -1, with default header values.

Error
*/
type FreeIPDeprecatedDefault struct {
	_statusCode int

	Payload *httperrors.HTTPErrorResponse
}

// IsSuccess returns true when this free IP deprecated default response has a 2xx status code
func (o *FreeIPDeprecatedDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this free IP deprecated default response has a 3xx status code
func (o *FreeIPDeprecatedDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this free IP deprecated default response has a 4xx status code
func (o *FreeIPDeprecatedDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this free IP deprecated default response has a 5xx status code
func (o *FreeIPDeprecatedDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this free IP deprecated default response a status code equal to that given
func (o *FreeIPDeprecatedDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the free IP deprecated default response
func (o *FreeIPDeprecatedDefault) Code() int {
	return o._statusCode
}

func (o *FreeIPDeprecatedDefault) Error() string {
	return fmt.Sprintf("[POST /v1/ip/free/{id}][%d] freeIPDeprecated default  %+v", o._statusCode, o.Payload)
}

func (o *FreeIPDeprecatedDefault) String() string {
	return fmt.Sprintf("[POST /v1/ip/free/{id}][%d] freeIPDeprecated default  %+v", o._statusCode, o.Payload)
}

func (o *FreeIPDeprecatedDefault) GetPayload() *httperrors.HTTPErrorResponse {
	return o.Payload
}

func (o *FreeIPDeprecatedDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(httperrors.HTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
