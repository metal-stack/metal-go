// Code generated by go-swagger; DO NOT EDIT.

package audit

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/metal-stack/metal-go/api/models"
	"github.com/metal-stack/metal-lib/httperrors"
)

// FindAuditTracesReader is a Reader for the FindAuditTraces structure.
type FindAuditTracesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FindAuditTracesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFindAuditTracesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewFindAuditTracesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewFindAuditTracesOK creates a FindAuditTracesOK with default headers values
func NewFindAuditTracesOK() *FindAuditTracesOK {
	return &FindAuditTracesOK{}
}

/*
FindAuditTracesOK describes a response with status code 200, with default header values.

OK
*/
type FindAuditTracesOK struct {
	Payload []*models.V1AuditResponse
}

// IsSuccess returns true when this find audit traces o k response has a 2xx status code
func (o *FindAuditTracesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this find audit traces o k response has a 3xx status code
func (o *FindAuditTracesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this find audit traces o k response has a 4xx status code
func (o *FindAuditTracesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this find audit traces o k response has a 5xx status code
func (o *FindAuditTracesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this find audit traces o k response a status code equal to that given
func (o *FindAuditTracesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the find audit traces o k response
func (o *FindAuditTracesOK) Code() int {
	return 200
}

func (o *FindAuditTracesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/audit/find][%d] findAuditTracesOK %s", 200, payload)
}

func (o *FindAuditTracesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/audit/find][%d] findAuditTracesOK %s", 200, payload)
}

func (o *FindAuditTracesOK) GetPayload() []*models.V1AuditResponse {
	return o.Payload
}

func (o *FindAuditTracesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFindAuditTracesDefault creates a FindAuditTracesDefault with default headers values
func NewFindAuditTracesDefault(code int) *FindAuditTracesDefault {
	return &FindAuditTracesDefault{
		_statusCode: code,
	}
}

/*
FindAuditTracesDefault describes a response with status code -1, with default header values.

Error
*/
type FindAuditTracesDefault struct {
	_statusCode int

	Payload *httperrors.HTTPErrorResponse
}

// IsSuccess returns true when this find audit traces default response has a 2xx status code
func (o *FindAuditTracesDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this find audit traces default response has a 3xx status code
func (o *FindAuditTracesDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this find audit traces default response has a 4xx status code
func (o *FindAuditTracesDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this find audit traces default response has a 5xx status code
func (o *FindAuditTracesDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this find audit traces default response a status code equal to that given
func (o *FindAuditTracesDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the find audit traces default response
func (o *FindAuditTracesDefault) Code() int {
	return o._statusCode
}

func (o *FindAuditTracesDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/audit/find][%d] findAuditTraces default %s", o._statusCode, payload)
}

func (o *FindAuditTracesDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/audit/find][%d] findAuditTraces default %s", o._statusCode, payload)
}

func (o *FindAuditTracesDefault) GetPayload() *httperrors.HTTPErrorResponse {
	return o.Payload
}

func (o *FindAuditTracesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(httperrors.HTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
