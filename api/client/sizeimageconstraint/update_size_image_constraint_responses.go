// Code generated by go-swagger; DO NOT EDIT.

package sizeimageconstraint

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/metal-stack/metal-go/api/models"
	"github.com/metal-stack/metal-lib/httperrors"
)

// UpdateSizeImageConstraintReader is a Reader for the UpdateSizeImageConstraint structure.
type UpdateSizeImageConstraintReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateSizeImageConstraintReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateSizeImageConstraintOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 409:
		result := NewUpdateSizeImageConstraintConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewUpdateSizeImageConstraintDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateSizeImageConstraintOK creates a UpdateSizeImageConstraintOK with default headers values
func NewUpdateSizeImageConstraintOK() *UpdateSizeImageConstraintOK {
	return &UpdateSizeImageConstraintOK{}
}

/* UpdateSizeImageConstraintOK describes a response with status code 200, with default header values.

OK
*/
type UpdateSizeImageConstraintOK struct {
	Payload *models.V1SizeImageConstraintResponse
}

func (o *UpdateSizeImageConstraintOK) Error() string {
	return fmt.Sprintf("[POST /v1/sizeimageconstraint/sizeimageconstraints][%d] updateSizeImageConstraintOK  %+v", 200, o.Payload)
}
func (o *UpdateSizeImageConstraintOK) GetPayload() *models.V1SizeImageConstraintResponse {
	return o.Payload
}

func (o *UpdateSizeImageConstraintOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1SizeImageConstraintResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateSizeImageConstraintConflict creates a UpdateSizeImageConstraintConflict with default headers values
func NewUpdateSizeImageConstraintConflict() *UpdateSizeImageConstraintConflict {
	return &UpdateSizeImageConstraintConflict{}
}

/* UpdateSizeImageConstraintConflict describes a response with status code 409, with default header values.

Conflict
*/
type UpdateSizeImageConstraintConflict struct {
	Payload *httperrors.HTTPErrorResponse
}

func (o *UpdateSizeImageConstraintConflict) Error() string {
	return fmt.Sprintf("[POST /v1/sizeimageconstraint/sizeimageconstraints][%d] updateSizeImageConstraintConflict  %+v", 409, o.Payload)
}
func (o *UpdateSizeImageConstraintConflict) GetPayload() *httperrors.HTTPErrorResponse {
	return o.Payload
}

func (o *UpdateSizeImageConstraintConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(httperrors.HTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateSizeImageConstraintDefault creates a UpdateSizeImageConstraintDefault with default headers values
func NewUpdateSizeImageConstraintDefault(code int) *UpdateSizeImageConstraintDefault {
	return &UpdateSizeImageConstraintDefault{
		_statusCode: code,
	}
}

/* UpdateSizeImageConstraintDefault describes a response with status code -1, with default header values.

Error
*/
type UpdateSizeImageConstraintDefault struct {
	_statusCode int

	Payload *httperrors.HTTPErrorResponse
}

// Code gets the status code for the update size image constraint default response
func (o *UpdateSizeImageConstraintDefault) Code() int {
	return o._statusCode
}

func (o *UpdateSizeImageConstraintDefault) Error() string {
	return fmt.Sprintf("[POST /v1/sizeimageconstraint/sizeimageconstraints][%d] updateSizeImageConstraint default  %+v", o._statusCode, o.Payload)
}
func (o *UpdateSizeImageConstraintDefault) GetPayload() *httperrors.HTTPErrorResponse {
	return o.Payload
}

func (o *UpdateSizeImageConstraintDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(httperrors.HTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
