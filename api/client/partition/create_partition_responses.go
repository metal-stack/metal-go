// Code generated by go-swagger; DO NOT EDIT.

package partition

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/metal-stack/metal-go/api/models"
	"github.com/metal-stack/metal-lib/httperrors"
)

// CreatePartitionReader is a Reader for the CreatePartition structure.
type CreatePartitionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreatePartitionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreatePartitionCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 409:
		result := NewCreatePartitionConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCreatePartitionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreatePartitionCreated creates a CreatePartitionCreated with default headers values
func NewCreatePartitionCreated() *CreatePartitionCreated {
	return &CreatePartitionCreated{}
}

/*
CreatePartitionCreated describes a response with status code 201, with default header values.

Created
*/
type CreatePartitionCreated struct {
	Payload *models.V1PartitionResponse
}

// IsSuccess returns true when this create partition created response has a 2xx status code
func (o *CreatePartitionCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create partition created response has a 3xx status code
func (o *CreatePartitionCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create partition created response has a 4xx status code
func (o *CreatePartitionCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create partition created response has a 5xx status code
func (o *CreatePartitionCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create partition created response a status code equal to that given
func (o *CreatePartitionCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create partition created response
func (o *CreatePartitionCreated) Code() int {
	return 201
}

func (o *CreatePartitionCreated) Error() string {
	return fmt.Sprintf("[PUT /v1/partition][%d] createPartitionCreated  %+v", 201, o.Payload)
}

func (o *CreatePartitionCreated) String() string {
	return fmt.Sprintf("[PUT /v1/partition][%d] createPartitionCreated  %+v", 201, o.Payload)
}

func (o *CreatePartitionCreated) GetPayload() *models.V1PartitionResponse {
	return o.Payload
}

func (o *CreatePartitionCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1PartitionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreatePartitionConflict creates a CreatePartitionConflict with default headers values
func NewCreatePartitionConflict() *CreatePartitionConflict {
	return &CreatePartitionConflict{}
}

/*
CreatePartitionConflict describes a response with status code 409, with default header values.

Conflict
*/
type CreatePartitionConflict struct {
	Payload *httperrors.HTTPErrorResponse
}

// IsSuccess returns true when this create partition conflict response has a 2xx status code
func (o *CreatePartitionConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create partition conflict response has a 3xx status code
func (o *CreatePartitionConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create partition conflict response has a 4xx status code
func (o *CreatePartitionConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create partition conflict response has a 5xx status code
func (o *CreatePartitionConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create partition conflict response a status code equal to that given
func (o *CreatePartitionConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the create partition conflict response
func (o *CreatePartitionConflict) Code() int {
	return 409
}

func (o *CreatePartitionConflict) Error() string {
	return fmt.Sprintf("[PUT /v1/partition][%d] createPartitionConflict  %+v", 409, o.Payload)
}

func (o *CreatePartitionConflict) String() string {
	return fmt.Sprintf("[PUT /v1/partition][%d] createPartitionConflict  %+v", 409, o.Payload)
}

func (o *CreatePartitionConflict) GetPayload() *httperrors.HTTPErrorResponse {
	return o.Payload
}

func (o *CreatePartitionConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(httperrors.HTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreatePartitionDefault creates a CreatePartitionDefault with default headers values
func NewCreatePartitionDefault(code int) *CreatePartitionDefault {
	return &CreatePartitionDefault{
		_statusCode: code,
	}
}

/*
CreatePartitionDefault describes a response with status code -1, with default header values.

Error
*/
type CreatePartitionDefault struct {
	_statusCode int

	Payload *httperrors.HTTPErrorResponse
}

// IsSuccess returns true when this create partition default response has a 2xx status code
func (o *CreatePartitionDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this create partition default response has a 3xx status code
func (o *CreatePartitionDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this create partition default response has a 4xx status code
func (o *CreatePartitionDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this create partition default response has a 5xx status code
func (o *CreatePartitionDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this create partition default response a status code equal to that given
func (o *CreatePartitionDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the create partition default response
func (o *CreatePartitionDefault) Code() int {
	return o._statusCode
}

func (o *CreatePartitionDefault) Error() string {
	return fmt.Sprintf("[PUT /v1/partition][%d] createPartition default  %+v", o._statusCode, o.Payload)
}

func (o *CreatePartitionDefault) String() string {
	return fmt.Sprintf("[PUT /v1/partition][%d] createPartition default  %+v", o._statusCode, o.Payload)
}

func (o *CreatePartitionDefault) GetPayload() *httperrors.HTTPErrorResponse {
	return o.Payload
}

func (o *CreatePartitionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(httperrors.HTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
