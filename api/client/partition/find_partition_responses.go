// Code generated by go-swagger; DO NOT EDIT.

package partition

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/metal-stack/metal-go/api/models"
	"github.com/metal-stack/metal-lib/httperrors"
)

// FindPartitionReader is a Reader for the FindPartition structure.
type FindPartitionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FindPartitionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFindPartitionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewFindPartitionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewFindPartitionOK creates a FindPartitionOK with default headers values
func NewFindPartitionOK() *FindPartitionOK {
	return &FindPartitionOK{}
}

/*
FindPartitionOK describes a response with status code 200, with default header values.

OK
*/
type FindPartitionOK struct {
	Payload *models.V1PartitionResponse
}

// IsSuccess returns true when this find partition o k response has a 2xx status code
func (o *FindPartitionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this find partition o k response has a 3xx status code
func (o *FindPartitionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this find partition o k response has a 4xx status code
func (o *FindPartitionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this find partition o k response has a 5xx status code
func (o *FindPartitionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this find partition o k response a status code equal to that given
func (o *FindPartitionOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the find partition o k response
func (o *FindPartitionOK) Code() int {
	return 200
}

func (o *FindPartitionOK) Error() string {
	return fmt.Sprintf("[GET /v1/partition/{id}][%d] findPartitionOK  %+v", 200, o.Payload)
}

func (o *FindPartitionOK) String() string {
	return fmt.Sprintf("[GET /v1/partition/{id}][%d] findPartitionOK  %+v", 200, o.Payload)
}

func (o *FindPartitionOK) GetPayload() *models.V1PartitionResponse {
	return o.Payload
}

func (o *FindPartitionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1PartitionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFindPartitionDefault creates a FindPartitionDefault with default headers values
func NewFindPartitionDefault(code int) *FindPartitionDefault {
	return &FindPartitionDefault{
		_statusCode: code,
	}
}

/*
FindPartitionDefault describes a response with status code -1, with default header values.

Error
*/
type FindPartitionDefault struct {
	_statusCode int

	Payload *httperrors.HTTPErrorResponse
}

// IsSuccess returns true when this find partition default response has a 2xx status code
func (o *FindPartitionDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this find partition default response has a 3xx status code
func (o *FindPartitionDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this find partition default response has a 4xx status code
func (o *FindPartitionDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this find partition default response has a 5xx status code
func (o *FindPartitionDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this find partition default response a status code equal to that given
func (o *FindPartitionDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the find partition default response
func (o *FindPartitionDefault) Code() int {
	return o._statusCode
}

func (o *FindPartitionDefault) Error() string {
	return fmt.Sprintf("[GET /v1/partition/{id}][%d] findPartition default  %+v", o._statusCode, o.Payload)
}

func (o *FindPartitionDefault) String() string {
	return fmt.Sprintf("[GET /v1/partition/{id}][%d] findPartition default  %+v", o._statusCode, o.Payload)
}

func (o *FindPartitionDefault) GetPayload() *httperrors.HTTPErrorResponse {
	return o.Payload
}

func (o *FindPartitionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(httperrors.HTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
