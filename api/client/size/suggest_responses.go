// Code generated by go-swagger; DO NOT EDIT.

package size

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/metal-stack/metal-go/api/models"
	"github.com/metal-stack/metal-lib/httperrors"
)

// SuggestReader is a Reader for the Suggest structure.
type SuggestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SuggestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSuggestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewSuggestDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSuggestOK creates a SuggestOK with default headers values
func NewSuggestOK() *SuggestOK {
	return &SuggestOK{}
}

/*
SuggestOK describes a response with status code 200, with default header values.

OK
*/
type SuggestOK struct {
	Payload []*models.V1SizeConstraint
}

// IsSuccess returns true when this suggest o k response has a 2xx status code
func (o *SuggestOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this suggest o k response has a 3xx status code
func (o *SuggestOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this suggest o k response has a 4xx status code
func (o *SuggestOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this suggest o k response has a 5xx status code
func (o *SuggestOK) IsServerError() bool {
	return false
}

// IsCode returns true when this suggest o k response a status code equal to that given
func (o *SuggestOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the suggest o k response
func (o *SuggestOK) Code() int {
	return 200
}

func (o *SuggestOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/size/suggest][%d] suggestOK %s", 200, payload)
}

func (o *SuggestOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/size/suggest][%d] suggestOK %s", 200, payload)
}

func (o *SuggestOK) GetPayload() []*models.V1SizeConstraint {
	return o.Payload
}

func (o *SuggestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSuggestDefault creates a SuggestDefault with default headers values
func NewSuggestDefault(code int) *SuggestDefault {
	return &SuggestDefault{
		_statusCode: code,
	}
}

/*
SuggestDefault describes a response with status code -1, with default header values.

Error
*/
type SuggestDefault struct {
	_statusCode int

	Payload *httperrors.HTTPErrorResponse
}

// IsSuccess returns true when this suggest default response has a 2xx status code
func (o *SuggestDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this suggest default response has a 3xx status code
func (o *SuggestDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this suggest default response has a 4xx status code
func (o *SuggestDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this suggest default response has a 5xx status code
func (o *SuggestDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this suggest default response a status code equal to that given
func (o *SuggestDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the suggest default response
func (o *SuggestDefault) Code() int {
	return o._statusCode
}

func (o *SuggestDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/size/suggest][%d] suggest default %s", o._statusCode, payload)
}

func (o *SuggestDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/size/suggest][%d] suggest default %s", o._statusCode, payload)
}

func (o *SuggestDefault) GetPayload() *httperrors.HTTPErrorResponse {
	return o.Payload
}

func (o *SuggestDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(httperrors.HTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
