// Code generated by go-swagger; DO NOT EDIT.

package firmware

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/metal-stack/metal-go/api/models"
)

// NewRemoveFirmwareParams creates a new RemoveFirmwareParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewRemoveFirmwareParams() *RemoveFirmwareParams {
	return &RemoveFirmwareParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewRemoveFirmwareParamsWithTimeout creates a new RemoveFirmwareParams object
// with the ability to set a timeout on a request.
func NewRemoveFirmwareParamsWithTimeout(timeout time.Duration) *RemoveFirmwareParams {
	return &RemoveFirmwareParams{
		timeout: timeout,
	}
}

// NewRemoveFirmwareParamsWithContext creates a new RemoveFirmwareParams object
// with the ability to set a context for a request.
func NewRemoveFirmwareParamsWithContext(ctx context.Context) *RemoveFirmwareParams {
	return &RemoveFirmwareParams{
		Context: ctx,
	}
}

// NewRemoveFirmwareParamsWithHTTPClient creates a new RemoveFirmwareParams object
// with the ability to set a custom HTTPClient for a request.
func NewRemoveFirmwareParamsWithHTTPClient(client *http.Client) *RemoveFirmwareParams {
	return &RemoveFirmwareParams{
		HTTPClient: client,
	}
}

/* RemoveFirmwareParams contains all the parameters to send to the API endpoint
   for the remove firmware operation.

   Typically these are written to a http.Request.
*/
type RemoveFirmwareParams struct {

	/* Board.

	   the board
	*/
	Board string

	// Body.
	Body models.V1EmptyBody

	/* Kind.

	   the firmware kind [bios|bmc]
	*/
	Kind string

	/* Revision.

	   the firmware revision
	*/
	Revision string

	/* Vendor.

	   the vendor
	*/
	Vendor string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the remove firmware params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *RemoveFirmwareParams) WithDefaults() *RemoveFirmwareParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the remove firmware params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *RemoveFirmwareParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the remove firmware params
func (o *RemoveFirmwareParams) WithTimeout(timeout time.Duration) *RemoveFirmwareParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the remove firmware params
func (o *RemoveFirmwareParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the remove firmware params
func (o *RemoveFirmwareParams) WithContext(ctx context.Context) *RemoveFirmwareParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the remove firmware params
func (o *RemoveFirmwareParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the remove firmware params
func (o *RemoveFirmwareParams) WithHTTPClient(client *http.Client) *RemoveFirmwareParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the remove firmware params
func (o *RemoveFirmwareParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBoard adds the board to the remove firmware params
func (o *RemoveFirmwareParams) WithBoard(board string) *RemoveFirmwareParams {
	o.SetBoard(board)
	return o
}

// SetBoard adds the board to the remove firmware params
func (o *RemoveFirmwareParams) SetBoard(board string) {
	o.Board = board
}

// WithBody adds the body to the remove firmware params
func (o *RemoveFirmwareParams) WithBody(body models.V1EmptyBody) *RemoveFirmwareParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the remove firmware params
func (o *RemoveFirmwareParams) SetBody(body models.V1EmptyBody) {
	o.Body = body
}

// WithKind adds the kind to the remove firmware params
func (o *RemoveFirmwareParams) WithKind(kind string) *RemoveFirmwareParams {
	o.SetKind(kind)
	return o
}

// SetKind adds the kind to the remove firmware params
func (o *RemoveFirmwareParams) SetKind(kind string) {
	o.Kind = kind
}

// WithRevision adds the revision to the remove firmware params
func (o *RemoveFirmwareParams) WithRevision(revision string) *RemoveFirmwareParams {
	o.SetRevision(revision)
	return o
}

// SetRevision adds the revision to the remove firmware params
func (o *RemoveFirmwareParams) SetRevision(revision string) {
	o.Revision = revision
}

// WithVendor adds the vendor to the remove firmware params
func (o *RemoveFirmwareParams) WithVendor(vendor string) *RemoveFirmwareParams {
	o.SetVendor(vendor)
	return o
}

// SetVendor adds the vendor to the remove firmware params
func (o *RemoveFirmwareParams) SetVendor(vendor string) {
	o.Vendor = vendor
}

// WriteToRequest writes these params to a swagger request
func (o *RemoveFirmwareParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param board
	if err := r.SetPathParam("board", o.Board); err != nil {
		return err
	}
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param kind
	if err := r.SetPathParam("kind", o.Kind); err != nil {
		return err
	}

	// path param revision
	if err := r.SetPathParam("revision", o.Revision); err != nil {
		return err
	}

	// path param vendor
	if err := r.SetPathParam("vendor", o.Vendor); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
