// Code generated by go-swagger; DO NOT EDIT.

package machine

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/metal-stack/metal-go/api/models"
	"github.com/metal-stack/metal-lib/httperrors"
)

// MachineSSHPubKeysReader is a Reader for the MachineSSHPubKeys structure.
type MachineSSHPubKeysReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *MachineSSHPubKeysReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewMachineSSHPubKeysOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewMachineSSHPubKeysBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewMachineSSHPubKeysDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewMachineSSHPubKeysOK creates a MachineSSHPubKeysOK with default headers values
func NewMachineSSHPubKeysOK() *MachineSSHPubKeysOK {
	return &MachineSSHPubKeysOK{}
}

/*
MachineSSHPubKeysOK describes a response with status code 200, with default header values.

OK
*/
type MachineSSHPubKeysOK struct {
	Payload *models.V1MachineResponse
}

// IsSuccess returns true when this machine Ssh pub keys o k response has a 2xx status code
func (o *MachineSSHPubKeysOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this machine Ssh pub keys o k response has a 3xx status code
func (o *MachineSSHPubKeysOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this machine Ssh pub keys o k response has a 4xx status code
func (o *MachineSSHPubKeysOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this machine Ssh pub keys o k response has a 5xx status code
func (o *MachineSSHPubKeysOK) IsServerError() bool {
	return false
}

// IsCode returns true when this machine Ssh pub keys o k response a status code equal to that given
func (o *MachineSSHPubKeysOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the machine Ssh pub keys o k response
func (o *MachineSSHPubKeysOK) Code() int {
	return 200
}

func (o *MachineSSHPubKeysOK) Error() string {
	return fmt.Sprintf("[POST /v1/machine/{id}/sshpubkeys][%d] machineSshPubKeysOK  %+v", 200, o.Payload)
}

func (o *MachineSSHPubKeysOK) String() string {
	return fmt.Sprintf("[POST /v1/machine/{id}/sshpubkeys][%d] machineSshPubKeysOK  %+v", 200, o.Payload)
}

func (o *MachineSSHPubKeysOK) GetPayload() *models.V1MachineResponse {
	return o.Payload
}

func (o *MachineSSHPubKeysOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1MachineResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMachineSSHPubKeysBadRequest creates a MachineSSHPubKeysBadRequest with default headers values
func NewMachineSSHPubKeysBadRequest() *MachineSSHPubKeysBadRequest {
	return &MachineSSHPubKeysBadRequest{}
}

/*
MachineSSHPubKeysBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type MachineSSHPubKeysBadRequest struct {
	Payload *httperrors.HTTPErrorResponse
}

// IsSuccess returns true when this machine Ssh pub keys bad request response has a 2xx status code
func (o *MachineSSHPubKeysBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this machine Ssh pub keys bad request response has a 3xx status code
func (o *MachineSSHPubKeysBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this machine Ssh pub keys bad request response has a 4xx status code
func (o *MachineSSHPubKeysBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this machine Ssh pub keys bad request response has a 5xx status code
func (o *MachineSSHPubKeysBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this machine Ssh pub keys bad request response a status code equal to that given
func (o *MachineSSHPubKeysBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the machine Ssh pub keys bad request response
func (o *MachineSSHPubKeysBadRequest) Code() int {
	return 400
}

func (o *MachineSSHPubKeysBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/machine/{id}/sshpubkeys][%d] machineSshPubKeysBadRequest  %+v", 400, o.Payload)
}

func (o *MachineSSHPubKeysBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/machine/{id}/sshpubkeys][%d] machineSshPubKeysBadRequest  %+v", 400, o.Payload)
}

func (o *MachineSSHPubKeysBadRequest) GetPayload() *httperrors.HTTPErrorResponse {
	return o.Payload
}

func (o *MachineSSHPubKeysBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(httperrors.HTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMachineSSHPubKeysDefault creates a MachineSSHPubKeysDefault with default headers values
func NewMachineSSHPubKeysDefault(code int) *MachineSSHPubKeysDefault {
	return &MachineSSHPubKeysDefault{
		_statusCode: code,
	}
}

/*
MachineSSHPubKeysDefault describes a response with status code -1, with default header values.

Error
*/
type MachineSSHPubKeysDefault struct {
	_statusCode int

	Payload *httperrors.HTTPErrorResponse
}

// IsSuccess returns true when this machine SSH pub keys default response has a 2xx status code
func (o *MachineSSHPubKeysDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this machine SSH pub keys default response has a 3xx status code
func (o *MachineSSHPubKeysDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this machine SSH pub keys default response has a 4xx status code
func (o *MachineSSHPubKeysDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this machine SSH pub keys default response has a 5xx status code
func (o *MachineSSHPubKeysDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this machine SSH pub keys default response a status code equal to that given
func (o *MachineSSHPubKeysDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the machine SSH pub keys default response
func (o *MachineSSHPubKeysDefault) Code() int {
	return o._statusCode
}

func (o *MachineSSHPubKeysDefault) Error() string {
	return fmt.Sprintf("[POST /v1/machine/{id}/sshpubkeys][%d] machineSSHPubKeys default  %+v", o._statusCode, o.Payload)
}

func (o *MachineSSHPubKeysDefault) String() string {
	return fmt.Sprintf("[POST /v1/machine/{id}/sshpubkeys][%d] machineSSHPubKeys default  %+v", o._statusCode, o.Payload)
}

func (o *MachineSSHPubKeysDefault) GetPayload() *httperrors.HTTPErrorResponse {
	return o.Payload
}

func (o *MachineSSHPubKeysDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(httperrors.HTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
