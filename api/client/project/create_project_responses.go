// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/metal-stack/metal-go/api/models"
	"github.com/metal-stack/metal-lib/httperrors"
)

// CreateProjectReader is a Reader for the CreateProject structure.
type CreateProjectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateProjectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateProjectCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 409:
		result := NewCreateProjectConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCreateProjectDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateProjectCreated creates a CreateProjectCreated with default headers values
func NewCreateProjectCreated() *CreateProjectCreated {
	return &CreateProjectCreated{}
}

/*
CreateProjectCreated describes a response with status code 201, with default header values.

Created
*/
type CreateProjectCreated struct {
	Payload *models.V1ProjectResponse
}

// IsSuccess returns true when this create project created response has a 2xx status code
func (o *CreateProjectCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create project created response has a 3xx status code
func (o *CreateProjectCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project created response has a 4xx status code
func (o *CreateProjectCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create project created response has a 5xx status code
func (o *CreateProjectCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create project created response a status code equal to that given
func (o *CreateProjectCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create project created response
func (o *CreateProjectCreated) Code() int {
	return 201
}

func (o *CreateProjectCreated) Error() string {
	return fmt.Sprintf("[PUT /v1/project][%d] createProjectCreated  %+v", 201, o.Payload)
}

func (o *CreateProjectCreated) String() string {
	return fmt.Sprintf("[PUT /v1/project][%d] createProjectCreated  %+v", 201, o.Payload)
}

func (o *CreateProjectCreated) GetPayload() *models.V1ProjectResponse {
	return o.Payload
}

func (o *CreateProjectCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1ProjectResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateProjectConflict creates a CreateProjectConflict with default headers values
func NewCreateProjectConflict() *CreateProjectConflict {
	return &CreateProjectConflict{}
}

/*
CreateProjectConflict describes a response with status code 409, with default header values.

Conflict
*/
type CreateProjectConflict struct {
	Payload *httperrors.HTTPErrorResponse
}

// IsSuccess returns true when this create project conflict response has a 2xx status code
func (o *CreateProjectConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create project conflict response has a 3xx status code
func (o *CreateProjectConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project conflict response has a 4xx status code
func (o *CreateProjectConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create project conflict response has a 5xx status code
func (o *CreateProjectConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create project conflict response a status code equal to that given
func (o *CreateProjectConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the create project conflict response
func (o *CreateProjectConflict) Code() int {
	return 409
}

func (o *CreateProjectConflict) Error() string {
	return fmt.Sprintf("[PUT /v1/project][%d] createProjectConflict  %+v", 409, o.Payload)
}

func (o *CreateProjectConflict) String() string {
	return fmt.Sprintf("[PUT /v1/project][%d] createProjectConflict  %+v", 409, o.Payload)
}

func (o *CreateProjectConflict) GetPayload() *httperrors.HTTPErrorResponse {
	return o.Payload
}

func (o *CreateProjectConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(httperrors.HTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateProjectDefault creates a CreateProjectDefault with default headers values
func NewCreateProjectDefault(code int) *CreateProjectDefault {
	return &CreateProjectDefault{
		_statusCode: code,
	}
}

/*
CreateProjectDefault describes a response with status code -1, with default header values.

Error
*/
type CreateProjectDefault struct {
	_statusCode int

	Payload *httperrors.HTTPErrorResponse
}

// IsSuccess returns true when this create project default response has a 2xx status code
func (o *CreateProjectDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this create project default response has a 3xx status code
func (o *CreateProjectDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this create project default response has a 4xx status code
func (o *CreateProjectDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this create project default response has a 5xx status code
func (o *CreateProjectDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this create project default response a status code equal to that given
func (o *CreateProjectDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the create project default response
func (o *CreateProjectDefault) Code() int {
	return o._statusCode
}

func (o *CreateProjectDefault) Error() string {
	return fmt.Sprintf("[PUT /v1/project][%d] createProject default  %+v", o._statusCode, o.Payload)
}

func (o *CreateProjectDefault) String() string {
	return fmt.Sprintf("[PUT /v1/project][%d] createProject default  %+v", o._statusCode, o.Payload)
}

func (o *CreateProjectDefault) GetPayload() *httperrors.HTTPErrorResponse {
	return o.Payload
}

func (o *CreateProjectDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(httperrors.HTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
